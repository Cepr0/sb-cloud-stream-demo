eureka:
  client:
    serviceUrl:
      defaultZone: http://${EUREKA_HOSTNAME:localhost}:8761/eureka/

spring:

  application:
    name: order-service

  cloud:
    stream:
      bindings:
        # outputs
        order-created:
          destination: common

        # inputs
        order-completed:
          destination: order-completed
          group: order-service

        product-not-found:
          destination: product-not-found
          group: order-service

        product-ended:
          destination: product-ended
          group: order-service

      rabbit:
        bindings:
          # outputs
          order-created:
            producer:
              routing-key-expression: '''order-created'''

          # inputs
          order-completed:
            consumer:
              binding-routing-key: 'order-completed'
              queue-name-group-only: false

          product-not-found:
            consumer:
              binding-routing-key: 'product-not-found'
              queue-name-group-only: false

          product-ended:
            consumer:
              binding-routing-key: 'product-ended'
              queue-name-group-only: false

  datasource:
    url: jdbc:postgresql://localhost:5432/order_service
    username: postgres
    password: postgres
  jpa:
    open-in-view: false
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        jdbc:
          lob.non_contextual_creation: true
          batch_size: 20
          fetch_size: 20
          batch_versioned_data: true
    hibernate:
      ddl-auto: validate

logging:
  level:
    jdbc:
      sqltiming: info
      resultsettable: info
      sqlonly: fatal
      audit: fatal
      resultset: fatal
      connection: fatal

log4jdbc:
  dump.sql:
    addsemicolon: true
    maxlinelength: 0
  trim.sql.extrablanklines: false
management:
