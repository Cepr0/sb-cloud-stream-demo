version: '2.3'

services:

  postgres:
    extends:
      file: ../postgres-compose.yml
      service: postgresql

  rabbit:
    image: rabbitmq:management
    container_name: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmqctl status
      interval: 20s
      timeout: 5s
      retries: 10
    depends_on:
      postgres:
        condition: service_healthy

  config:
    build: ../config
    container_name: config
    restart: 'no'
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
    depends_on:
      rabbit:
        condition: service_healthy

  discovery-service:
    build: ../discovery-service
    container_name: discovery-service
    restart: 'on-failure'
    ports:
      - 8761:8761
    environment:
      - EUREKA_HOSTNAME=discovery-service
    healthcheck:
      test: curl -f localhost:8761/actuator/health | grep UP || exit 1
      interval: 20s
      timeout: 5s
      retries: 10

  product-service:
    build: ../product-service
    restart: 'on-failure'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/product_service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbit
      - EUREKA_HOSTNAME=discovery-service
    healthcheck:
      test: curl -f localhost:8080/actuator/health | grep UP || exit 1
      interval: 20s
      timeout: 5s
      retries: 10
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_healthy

  order-service:
    build: ../order-service
    restart: 'on-failure'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/order_service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_RABBITMQ_HOST=rabbit
      - EUREKA_HOSTNAME=discovery-service
    healthcheck:
      test: curl -f localhost:8080/actuator/health | grep UP || exit 1
      interval: 20s
      timeout: 5s
      retries: 10
    depends_on:
      rabbit:
        condition: service_healthy
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_healthy
      product-service:
        condition: service_started

  supply-service:
    build: ../supply-service
    restart: 'on-failure'
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
      - EUREKA_HOSTNAME=discovery-service
    healthcheck:
      test: curl -f localhost:8080/actuator/health | grep UP || exit 1
      interval: 20s
      timeout: 5s
      retries: 10
    depends_on:
      discovery-service:
        condition: service_healthy
      product-service:
        condition: service_healthy

  stat-service:
    build: ../stat-service
    restart: 'on-failure'
    container_name: stat-service
    ports:
      - 8080:8080
    environment:
      - SPRING_RABBITMQ_HOST=rabbit
    healthcheck:
      test: curl -f localhost:8080/actuator/health | grep UP || exit 1
      interval: 20s
      timeout: 5s
      retries: 10
    depends_on:
      rabbit:
        condition: service_healthy

  demo-client:
    build: ../demo-client
    restart: 'on-failure'
    environment:
      - CLIENT_INTERVAL=200
      - EUREKA_HOSTNAME=discovery-service
    depends_on:
      discovery-service:
        condition: service_healthy
      order-service:
        condition: service_healthy
      supply-service:
        condition: service_healthy
      stat-service:
        condition: service_healthy
